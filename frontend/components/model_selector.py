import gradio as gr
from typing import Dict, Any, List

def create_model_selector():
    """
    Cr√©e un composant pour s√©lectionner un mod√®le LLM.
    
    Returns:
        Dict contenant les composants du s√©lecteur
    """
    # √âtat pour stocker l'ID de configuration s√©lectionn√©
    selected_config_id = gr.State(None)
    
    # En-t√™te
    gr.Markdown("### Mod√®le LLM")
    
    # Dropdown pour s√©lectionner le mod√®le
    with gr.Row():
        model_dropdown = gr.Dropdown(
            label="Mod√®le √† utiliser",
            choices=[],
            value=None,
            interactive=True
        )
        
        refresh_button = gr.Button("üîÑ", scale=1)
    
    # Fonction pour mettre √† jour la liste des mod√®les
    def load_models(api_client):
        try:
            configs = api_client.list_llm_configs()
            return gr.Dropdown(
                choices=[(c["name"], c["id"]) for c in configs],
                value=configs[0]["id"] if configs else None
            ), configs[0]["id"] if configs else None
        except Exception:
            return gr.Dropdown(choices=[]), None
    
    return {
        "selected_config_id": selected_config_id,
        "model_dropdown": model_dropdown,
        "refresh_button": refresh_button,
        "load_models": load_models
    }